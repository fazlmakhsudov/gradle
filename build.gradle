plugins {
    id 'java'
    id 'idea'
    id 'checkstyle'
    id 'pmd'
    id 'com.bmuschko.clover' version "2.2.5"
    id 'com.github.spotbugs' version "4.2.2"
    id 'groovy'
}

repositories {
    mavenCentral()
}
//-----------------------------BASE CONFIGURATION--------------------------------------------
clover {

    testIncludes = ['**/*Test.java', '**/*.groovy']
    testExcludes = ['**/Mock*.java', '**/*Test.java', '**/*Test.groovy']

    targetPercentage = '75%'

    report {
        html = true
        pdf = true
        filter = 'log,main,getters,setters,equals,hashCodes,clones'

        columns {
            coveredMethods format: 'longbar', min: '75'
            coveredStatements format: '%'
            coveredBranches format: 'raw'
            totalPercentageCovered format: '%', scope: 'package'
        }

    }
}
dependencies {
    clover 'org.openclover:clover:4.4.1'
    testImplementation('org.junit.jupiter:junit-jupiter:5.7.2')
    testRuntimeOnly ('org.junit.jupiter:junit-jupiter-engine:5.7.2')
    testRuntimeOnly ('org.junit.jupiter:junit-jupiter-api:5.7.2')
    testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.6.2")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.7.2")
    testImplementation("org.mockito:mockito-junit-jupiter:3.11.2")
    implementation("commons-io:commons-io:2.11.0")
    implementation("io.cucumber:cucumber-java:6.11.0")
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation ("com.google.guava:guava:30.1.1-jre")

    implementation 'org.codehaus.groovy:groovy-all:2.4.15'
    testImplementation 'org.codehaus.groovy:groovy-all:2.4.15'
}

sourceSets {
    main {
        groovy {
            srcDirs = ['src/main/groovy']
        }
    }

    test {
        groovy {
            srcDirs = ['test/java']
        }
    }
}

contexts {
    statement {
        name = 'log'
        regexp = '^.*LOG\\..*'
    }

    method {
        name = 'main'
        regexp = 'public static void main\\(String args\\[\\]\\).*'
    }
    method {
        name = 'getters'
        regexp = 'public [^\\s]+ get[A-Z][^\\s]+\\(\\)'
        maxStatements = 1
    }
    method {
        name = 'setters'
        regexp = 'public void set[A-Z][^\\s]+\\(.+\\)'
        maxStatements = 1
    }
    method {
        name = 'equals'
        regexp = 'public boolean equals\\(.*\\).*'
        maxStatements = 1
    }
    method {
        name = 'hashCodes'
        regexp = 'public int hashCode\\(\\).*'
        maxStatements = 1
    }
    method {
        name = 'clones'
        regexp = 'public Object clone\\(\\).*'
        maxStatements = 1
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

checkstyle {
    toolVersion "7.6.1"
    checkstyleTest.enabled = false
}

check.dependsOn cloverGenerateReport

spotbugsMain {
    reports {
        html {
            enabled = true
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

pmd {
    ignoreFailures = true
    pmdTest.enabled=false
    ruleSets = [
            'java-basic',
            'java-braces',
            'java-clone',
            'java-codesize',
            'java-comments',
            'java-controversial',
            'java-coupling',
            'java-design',
            'java-empty',
            'java-finalizers',
            'java-imports',
            'java-optimizations',
            'java-strictexception',
            'java-strings',
            'java-typeresolution',
            'java-unnecessary',
            'java-unusedcode'
    ]
}

tasks.withType(Pmd) {
    reports{
        xml.enabled=true
        html.enabled=true
    }
}

